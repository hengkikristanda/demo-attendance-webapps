<!DOCTYPE html>
<html lang="en">
	<%- include('../../commonSection/header') %>
	<body class="admin">
		<%- include('../../commonSection/navbar') %>

		<div class="admin-container">
			<%- include('../../commonSection/drawer') %>
			<div class="flex justify-between grow gap-8 overflow-auto">
				<div class="layout-card mb-12">
					<%- include('../../commonSection/LayoutHeader') %>

					<form
						class="custom-form"
						method="POST"
						id="updateUserProfileForm"
						enctype="multipart/form-data"
						action="/member/web/lecturer/add">
						<div class="flex flex-col">
							<div class="flex gap-4">
								<div class="container-card mb-4 grow">
									<div
										id="profilePictureContainer"
										class="flex flex-col gap-4 border-0 grow relative">
										<div class="w-full h-1/2 bg-red-800 absolute"></div>
										<div
											id="editableProfilePictureContainer"
											class="group size-48 rounded-full overflow-hidden mx-auto my-auto cursor-pointer relative border-8 border-white">
											<div
												class="bg-secondary/75 w-full h-full absolute hidden group-hover:flex justify-center items-center">
												<p class="font-semibold text-white underline">Change Photo</p>
											</div>
											<img
												id="profilePictureImage"
												name="profilePictureImage"
												src="/img//profile-picture-placeholder.jpeg"
												class="w-full h-full object-cover object-center" />
											<input
												id="profilePictureFile"
												name="profilePictureFile"
												type="file"
												class="hidden"
												accept=".png, .jpg, .jpeg" />
										</div>
									</div>
								</div>
								<div class="container-card mb-4 grow">
									<div class="flex gap-4 w-full">
										<div id="userProfileInputContainer" class="flex flex-col gap-4 border-0 grow">
											<div>
												<label for="Full Name">Lecturer Full Name</label>
												<input
													id="fullName"
													name="fullName"
													type="text"
													placeholder="Lecturer Full name with academics title"
													maxlength="15"
													value=""
													size="75" />
											</div>
											<div>
												<label for="Email Address">Email Address</label>
												<input
													id="emailAddress"
													name="emailAddress"
													type="email"
													placeholder="e.g: email@example.com"
													maxlength="100"
													value=""
													size="75" />
											</div>
											<div>
												<label for="Lecturer CV">Lecturer CV</label>
												<span class="file-name" id="clickBrowseFile"> Click to browse file </span>
												<input
													id="docFile"
													name="documentFile"
													type="file"
													class="hidden"
													accept="..pdf" />
											</div>
											<div>
												<label for="Display Order">Display Order</label>
												<input
													id="displayOrder"
													name="displayOrder"
													type="text"
													placeholder="e.g: 1"
													maxlength="2"
													value=""
													size="75" />
											</div>
										</div>
									</div>
								</div>
							</div>

							<div id="profExpContainer" class="flex flex-col">
								<div class="container-card mb-4 grow">
									<div
										class="flex justify-between items-end font-semibold text-secondary gap-4 border-0 grow">
										<h6 class="uppercase">Professional Experience</h6>
										<h6
											id="profExp"
											class="add-lecturer-detail-btn cursor-pointer text-xs text-tertiary underline text-end">
											Add Professional Experience
										</h6>
									</div>
								</div>
							</div>

							<div id="eduBgContainer" class="flex flex-col">
								<div class="container-card mb-4 grow">
									<div
										class="flex justify-between items-end font-semibold text-secondary gap-4 border-0 grow">
										<h6 class="uppercase">Educational Background</h6>
										<h6
											id="eduBg"
											class="add-lecturer-detail-btn cursor-pointer text-xs text-tertiary underline text-end">
											Add Educational Background
										</h6>
									</div>
								</div>
							</div>

							<div id="researchActContainer" class="flex flex-col">
								<div class="container-card mb-4 grow">
									<div
										class="flex justify-between items-end font-semibold text-secondary gap-4 border-0 grow">
										<h6 class="uppercase">Research Activities</h6>
										<h6
											id="researchAct"
											class="add-lecturer-detail-btn cursor-pointer text-xs text-tertiary underline text-end">
											Add Research Activities
										</h6>
									</div>
								</div>
							</div>
						</div>
						<div class="container-card gap-6">
							<button type="submit" class="btn success">Save Changes</button>
						</div>
						<input
							type="hidden"
							name="profesionalExperienceItems"
							id="profesionalExperienceItems" />
						<input type="hidden" name="educationBackgroundItems" id="educationBackgroundItems" />
						<input type="hidden" name="researchActivityItems" id="researchActivityItems" />
					</form>
				</div>
			</div>
		</div>

		<!-- Modal -->
		<div
			id="modal"
			class="fixed z-50 inset-0 hidden bg-gray-900 bg-opacity-75 flex items-center justify-center py-8">
			<div class="bg-white rounded-lg shadow-lg p-6 w-fit max-h-full overflow-y-scroll">
				<div class="flex justify-between">
					<h2 id="modalTitle" class="text-xl font-bold mb-4">Add Lecturer Detail</h2>
					<h1 class="close-modal cursor-pointer bi-x p-2 rounded hover:bg-gray-500"></h1>
				</div>

				<div id="modal-content" class="flex flex-col gap-12">
					<div class="flex flex-col gap-4">
						<div id="modalInputContainer" class="flex flex-col w-full gap-4 border-0">
							<input type="hidden" id="detailProfileType" value="profExp" />
							<div id="errorMessage" class="hidden badge danger text-xxs font-semibold"></div>
							<div id="jobTitle">
								<label for="jobTitleInput">Job Title</label>
								<input
									id="jobTitleInput"
									name="jobTitle"
									type="text"
									maxlength="512"
									size="75"
									value=""
									required />
							</div>
							<div id="organizationNameContainer">
								<label for="organizationNameInput">Company/Organization</label>
								<input
									id="organizationNameInput"
									name="organizationName"
									type="text"
									size="50"
									maxlength="300"
									value=""
									required />
							</div>
							<div id="periodContainer" class="flex w-full gap-4">
								<div id="fromYear" class="flex flex-col w-full">
									<label for="fromYear">From</label>
									<select
										id="fromYearInput"
										class="yearSelect text-xs text-gray-700 border-line rounded-md"
										required>
										<option selected="true" disabled="disabled" value="">Year</option>
										<% for (let n=startYear; n<=currentYear; n++) { %>
										<option value="<%=n%>"><%=n%></option>
										<% } %>
									</select>
								</div>
								<div id="toYear" class="flex flex-col w-full">
									<label for="toYear">To</label>
									<select
										id="toYearInput"
										class="yearSelect text-xs text-gray-700 border-line rounded-md"
										required>
										<option selected="true" disabled="disabled" value="">Year</option>
										<% for (let n=startYear; n<=currentYear; n++) { %>
										<option value="<%=n%>"><%=n%></option>
										<% } %>
									</select>
								</div>
							</div>
							<div id="isCurrentlyWorkingContainer" class="flex gap-2">
								<input id="isCurrentlyWorking" name="isCurrentlyWorking" type="checkbox" required />
								<label for="Currently Working">I'm currently working in this company</label>
							</div>
							<div class="flex border-0 gap-4 justify-end">
								<button id="addLecturerDetailModalButton" class="btn success w-full md:w-fit">
									Add
								</button>
								<button id="closeModalButton" class="btn info w-full md:w-fit">Cancel</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
	<script src="/js/CommonUtils.js"></script>
	<script>
		document.addEventListener("DOMContentLoaded", () => {
			let profesionalExperienceItems = [];
			let educationBackgroundItems = [];
			let researchActivityItems = [];

			const displayOrder = document.getElementById("displayOrder");
			displayOrder.addEventListener("input", enforceNumberInput);
			displayOrder.addEventListener("paste", enforceNumberInputOnCopyPaste);

			const profilePictureFile = document.getElementById("profilePictureFile");

			const editableProfilePictureContainer = document.getElementById(
				"editableProfilePictureContainer"
			);

			editableProfilePictureContainer.addEventListener("mouseup", () => profilePictureFile.click());

			profilePictureFile.addEventListener("change", function (event) {
				const file = event.target.files[0];
				if (file) {
					const reader = new FileReader();
					reader.onload = function (e) {
						document.getElementById("profilePictureImage").src = e.target.result;
					};
					reader.readAsDataURL(file);
				}
			});

			// Get elements
			const docFile = document.getElementById("docFile");
			const clickBrowseFile = document.getElementById("clickBrowseFile");

			clickBrowseFile.addEventListener("mouseup", () => {
				docFile.click();
			});

			// When the file input changes, update the displayed file name
			docFile.addEventListener("change", function () {
				const fileName = docFile.files.length > 0 ? docFile.files[0].name : "No file chosen";
				clickBrowseFile.textContent = fileName;
			});

			function addLecturerDetail() {
				const uuid = crypto.randomUUID();
				const detailProfileType = document.getElementById("detailProfileType").value;
				const targetLecturerDetail = document.getElementById(`${detailProfileType}Container`);

				const containerCard = document.createElement("div");
				containerCard.id = `${uuid}`;
				containerCard.classList.add("container-card", "lecturer-detail");

				const lecturerInfo = document.createElement("div");
				lecturerInfo.classList.add("lecturer-detail_info");

				const title = document.createElement("h5");
				title.textContent = document.getElementById("jobTitleInput").value;
				lecturerInfo.appendChild(title);

				if (detailProfileType === "profExp" || detailProfileType === "eduBg") {
					const organization = document.createElement("p");
					organization.textContent = document.getElementById("organizationNameInput").value;
					lecturerInfo.appendChild(organization);

					const fromYear = document.getElementById("fromYearInput").value;
					let toYear = document.getElementById("toYearInput").value;
					const isCurrentlyWorking = document.getElementById("isCurrentlyWorking");
					if (isCurrentlyWorking && isCurrentlyWorking.checked) {
						toYear = "Present";
					}

					const period = document.createElement("p");
					period.textContent = `${fromYear} - ${toYear}`;

					lecturerInfo.appendChild(period);

					if (detailProfileType === "profExp") {
						profesionalExperienceItems.push({
							id: uuid,
							job_title: title.textContent,
							organization_name: organization.textContent,
							start_year: fromYear,
							end_year: toYear,
							present: toYear === "Present" ? "Y" : "N",
						});
						document.getElementById("profesionalExperienceItems").value = JSON.stringify(
							profesionalExperienceItems
						);
					} else if (detailProfileType === "eduBg") {
						educationBackgroundItems.push({
							id: uuid,
							job_title: title.textContent,
							organization_name: organization.textContent,
							start_year: fromYear,
							end_year: toYear,
						});
						document.getElementById("educationBackgroundItems").value =
							JSON.stringify(educationBackgroundItems);
					}
				} else {
					researchActivityItems.push({
						id: uuid,
						job_title: title.textContent,
					});
					document.getElementById("researchActivityItems").value =
						JSON.stringify(researchActivityItems);
				}

				const deleteIcon = document.createElement("i");
				deleteIcon.classList.add("delete-bin", "remix", "icon-sm", "bg-secondary");

				const lecturerDelete = document.createElement("div");
				lecturerDelete.classList.add("lecturer-detail_delete");
				lecturerDelete.appendChild(deleteIcon);
				lecturerDelete.addEventListener("mouseup", () => removeRow(containerCard.id));

				containerCard.appendChild(lecturerInfo);
				containerCard.appendChild(lecturerDelete);

				targetLecturerDetail.appendChild(containerCard);

				closeModal();
			}

			function removeRow(lecturerDetailContainerId) {
				const targetRow = document.getElementById(lecturerDetailContainerId);
				targetRow.remove();

				profesionalExperienceItems = profesionalExperienceItems.filter(
					(item) => item.id !== lecturerDetailContainerId
				);
				educationBackgroundItems = educationBackgroundItems.filter(
					(item) => item.id !== lecturerDetailContainerId
				);
				researchActivityItems = researchActivityItems.filter(
					(item) => item.id !== lecturerDetailContainerId
				);

				document.getElementById("profesionalExperienceItems").value = JSON.stringify(
					profesionalExperienceItems
				);

				document.getElementById("educationBackgroundItems").value =
					JSON.stringify(educationBackgroundItems);

				document.getElementById("researchActivityItems").value =
					JSON.stringify(researchActivityItems);
			}

			function prepareModal(lecturerDetail) {
				const modalTitle = (document.getElementById("modalTitle").textContent =
					lecturerDetail.textContent);

				const modalInputContainer = document.getElementById("modalInputContainer");
				const jobTitleLabel = document.querySelector('label[for="jobTitleInput"]');
				const organizationNameLabel = document.querySelector('label[for="organizationNameInput"]');
				const organizationNameContainer = document.getElementById("organizationNameContainer");
				const isCurrentlyWorkingContainer = document.getElementById("isCurrentlyWorkingContainer");
				const periodContainer = document.getElementById("periodContainer");

				if (lecturerDetail.id == "profExp") {
					jobTitleLabel.textContent = "Job Title";
					organizationNameLabel.textContent = "Company/Organization";
					organizationNameContainer.classList.remove("hidden");
					isCurrentlyWorkingContainer.classList.remove("hidden");
					periodContainer.classList.remove("hidden");
				} else if (lecturerDetail.id == "eduBg") {
					jobTitleLabel.textContent = "Field of Study";
					organizationNameLabel.textContent = "Education Institution";
					organizationNameContainer.classList.remove("hidden");
					isCurrentlyWorkingContainer.classList.add("hidden");
					periodContainer.classList.remove("hidden");
				} else if (lecturerDetail.id == "researchAct") {
					jobTitleLabel.textContent = "Research Topics/Title";
					organizationNameContainer.classList.add("hidden");
					isCurrentlyWorkingContainer.classList.add("hidden");
					periodContainer.classList.add("hidden");
				}

				const inputs = document.querySelectorAll(
					"#modalInputContainer input, #modalInputContainer select"
				); // Select all input elements inside the div
				inputs.forEach((element) => {
					if (element.tagName === "SELECT") {
						element.selectedIndex = 0; // Reset select to the first option
					} else if (element.type === "checkbox") {
						element.checked = false; // Uncheck the checkbox
					} else if (element.tagName === "INPUT") {
						element.value = ""; // Clear text or number input
					}
				});
				document.getElementById("detailProfileType").value = lecturerDetail.id;
				document.getElementById("toYearInput").disabled = false;
			}

			function toggleCheckBox(ev) {
				const checkBox = ev.target;
				const toYearInput = document.getElementById("toYearInput");
				toYearInput.disabled = checkBox.checked;
			}

			function openModal(ev) {
				prepareModal(ev.target);
				document.getElementById("modal").classList.remove("hidden");
			}

			function closeModal() {
				document.getElementById("modal").classList.add("hidden");
				// const errorMessage = document.getElementById("errorMessage");
				// errorMessage.classList.add("hidden");
				// errorMessage.innerHTML = "";
			}

			const addLecturerDetailButton = document.querySelectorAll(".add-lecturer-detail-btn");
			addLecturerDetailButton.forEach((item) => item.addEventListener("mouseup", openModal));

			const addLecturerDetailModalButton = document.getElementById("addLecturerDetailModalButton");
			addLecturerDetailModalButton.addEventListener("mouseup", addLecturerDetail);

			const closeModalButton = document.getElementById("closeModalButton");
			closeModalButton.addEventListener("mouseup", closeModal);

			const isCurrentlyWorkingContainer = document.getElementById("isCurrentlyWorkingContainer");
			isCurrentlyWorkingContainer.addEventListener("change", toggleCheckBox);
		});
	</script>
</html>
